name: OctoBot-Tentacles-CI
on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:

jobs:
  tests:
    name: ${{ matrix.os }}${{ matrix.arch }} - Python 3.8 - ${{ matrix.type }} - tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
        arch: [ x64 ]
        type: [sources, cython]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8.x'
        architecture: ${{ matrix.arch }}

    - name: Install OctoBot on Unix
      if: matrix.os != 'windows-latest'
      env:
        OCTOBOT_GH_REPO: https://github.com/Drakkar-Software/OctoBot.git
        OCTOBOT_DEFAULT_BRANCH: dev
        DISABLE_SENTRY: True
      run: |
        TARGET_BRANCH=$([ "$GITHUB_HEAD_REF" == "" ] && echo ${GITHUB_REF##*/} || echo "$GITHUB_HEAD_REF")
        git clone -q $OCTOBOT_GH_REPO -b ${TARGET_BRANCH} || git clone -q $OCTOBOT_GH_REPO -b $OCTOBOT_DEFAULT_BRANCH
        cd OctoBot
        git status
        pip install --prefer-binary -r dev_requirements.txt -r requirements.txt
        cd ..
        mkdir new_tentacles
        cp -r Backtesting Evaluator Services Trading profiles new_tentacles
        cd OctoBot
        python start.py tentacles -d "../new_tentacles" -p "../../any_platform.zip"
        python start.py tentacles --install --location "../any_platform.zip" --all

    - name: Install OctoBot on Windows
      if: matrix.os == 'windows-latest'
      env:
        OCTOBOT_GH_REPO: https://github.com/Drakkar-Software/OctoBot.git
        OCTOBOT_DEFAULT_BRANCH: dev
        DISABLE_SENTRY: True
      run: |
        $env:TARGET_BRANCH = @({$env:GITHUB_HEAD_REF}, {$env:GITHUB_REF})[(Test-Path env:GITHUB_HEAD_REF)]
        If ($env:TARGET_BRANCH -notcontains "refs/tags/") {
          $env:TENTACLES_URL_TAG = "latest"
        }
        git clone -q $env:OCTOBOT_GH_REPO -b $env:TARGET_BRANCH.Replace('refs/heads/','')
        if ($LastExitCode -ne 0) {
          git clone -q $env:OCTOBOT_GH_REPO -b $env:OCTOBOT_DEFAULT_BRANCH
        }
        cd OctoBot
        git status
        pip install --upgrade pip setuptools wheel
        pip install --prefer-binary -r dev_requirements.txt -r requirements.txt
        cd ..
        mkdir new_tentacles
        xcopy Backtesting new_tentacles\\Backtesting /E/H/I
        xcopy Evaluator new_tentacles\\Evaluator /E/H/I
        xcopy Services new_tentacles\\Services /E/H/I
        xcopy Trading new_tentacles\\Trading /E/H/I
        xcopy profiles new_tentacles\\profiles /E/H/I
        cd OctoBot
        python start.py tentacles -d "../new_tentacles" -p "../../any_platform.zip"
        python start.py tentacles --install --location "../any_platform.zip" --all
      shell: powershell

    - name: Compile project
      if: matrix.type == 'cython'
      run: |
        cd OctoBot
        python setup.py build_ext --inplace
        python setup.py install

    - name: Pytests
      if: matrix.type == 'cython'
      env:
        CYTHON_IGNORE: True
        DISABLE_SENTRY: True
      run: |
        cd OctoBot
        pytest --cov=. --cov-config=.coveragerc --durations=0 -rw tentacles

    - name: Pytests
      env:
        DISABLE_SENTRY: True
      if: matrix.type != 'cython'
      run: |
        cd OctoBot
        pytest --cov=. --cov-config=.coveragerc --durations=0 -rw tentacles

    - name: Publish coverage
      if: matrix.type == 'sources' && github.event_name == 'push'
      run: coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

  upload_tentacles:
    needs: tests
    name: ubuntu-latest - Python 3.8 - upload tentacles
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set Environment Variables
        run: |
          echo "NEXUS_USERNAME=${{ secrets.NEXUS_USERNAME }}" >> $GITHUB_ENV
          echo "NEXUS_PASSWORD=${{ secrets.NEXUS_PASSWORD }}" >> $GITHUB_ENV
          echo "NEXUS_URL=${{ secrets.NEXUS_URL }}" >> $GITHUB_ENV
          TARGET_BRANCH=$([ "$GITHUB_HEAD_REF" == "" ] && echo ${GITHUB_REF##*/} || echo "$GITHUB_HEAD_REF")
          echo "TARGET_BRANCH=${TARGET_BRANCH}" >> $GITHUB_ENV

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.x'
          architecture: 'x64'

      - name: Produce tentacles package
        env:
          OCTOBOT_GH_REPO: https://github.com/Drakkar-Software/OctoBot.git
          OCTOBOT_DEFAULT_BRANCH: dev
        run: |
          git clone -q $OCTOBOT_GH_REPO -b ${TARGET_BRANCH} || git clone -q $OCTOBOT_GH_REPO -b $OCTOBOT_DEFAULT_BRANCH
          cd OctoBot
          git status
          pip install --prefer-binary -r dev_requirements.txt -r requirements.txt
          cd ..
          mkdir new_tentacles
          cp -r Backtesting Evaluator Services Trading profiles new_tentacles

      - name: Publish tag tentacles
        if: startsWith(github.ref, 'refs/tags')
        run: |
          sed -i "s/VERSION_PLACEHOLDER/${TARGET_BRANCH#refs/*/}/g" metadata.yaml
          cd OctoBot
          python start.py tentacles -m "../metadata.yaml" -d "../new_tentacles" -p "../../any_platform.zip" -ite -ute ${{ secrets.NEXUS_OFFICIAL_PATH }}/tentacles -upe ${{ secrets.NEXUS_OFFICIAL_PATH }}/packages/full/${{ secrets.TENTACLES_REPOSITORY_NAME }}

      - name: Publish latest tentacles
        if: github.ref == 'refs/heads/dev' && startsWith(github.ref, 'refs/tags') != true
        run: |
          sed -i "s/VERSION_PLACEHOLDER/latest/g" metadata.yaml
          cd OctoBot
          python start.py tentacles -m "../metadata.yaml" -d "../new_tentacles" -p "../../any_platform.zip" -upe ${{ secrets.NEXUS_OFFICIAL_PATH }}/packages/full/${{ secrets.TENTACLES_REPOSITORY_NAME }}

      - name: Publish cleaned branch tentacles
        if: startsWith(github.ref, 'refs/tags') != true && github.ref != 'refs/heads/master'
        env:
          NEXUS_URL: ${{ secrets.NEXUS_DEV_URL }}
        run: |
          branch="${TARGET_BRANCH##*/}"
          sed -i "s/VERSION_PLACEHOLDER/$branch/g" metadata.yaml
          sed -i "s/base/$branch/g" metadata.yaml
          sed -i "s/officials/dev/g" metadata.yaml
          cd OctoBot
          python start.py tentacles -m "../metadata.yaml" -d "../new_tentacles" -p "../../any_platform.zip" -upe ${{ secrets.NEXUS_DEV_PATH }}/packages/full/${{ secrets.TENTACLES_REPOSITORY_NAME }}

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs:
      - tests
      - upload_tentacles
    if: ${{ failure() }}

    steps:
      - name: Notify discord
        uses: sarisia/actions-status-discord@v1
        with:
          status: Failure
          webhook: ${{ secrets.DISCORD_GITHUB_WEBHOOK }}
