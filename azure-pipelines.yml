trigger:
  branches:
    include:
    - master
    - 0.4.0
  tags:
    include:
    - '*'
  paths:
    include:
      - '*'

pr:
  autoCancel: true
  branches:
    include:
    - '*'

variables:
  OCTOBOT_GH_REPO: https://github.com/Drakkar-Software/OctoBot.git
  OCTOBOT_DEFAULT_BRANCH: 0.4.0

jobs:
- job: Windows
  pool:
    vmImage: 'windows-latest'
  strategy:
    matrix:
        Python36-64bit-full:
          PYTHON_VERSION: '3.7'
          PYTHON_ARCH: 'x64'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: $(PYTHON_VERSION)
      addToPath: true
      architecture: $(PYTHON_ARCH)
  - powershell: |
      $Env:TENTACLES_URL_TAG = "latest"
      condition: ne(startsWith(variables['build.sourceBranch'], 'refs/tags/'))
  - powershell: |
      git clone -q $env:OCTOBOT_GH_REPO -b $env:build_sourceBranchName
      if ($LastExitCode -ne 0) {
        git clone -q $env:OCTOBOT_GH_REPO -b $env:OCTOBOT_DEFAULT_BRANCH
      }
      cd OctoBot
    displayName: 'Install OctoBot environment'
  - script: |
      python -m pip install --upgrade pip
      python -m pip install --prefer-binary -r requirements.txt -r dev_requirements.txt
    displayName: 'Install dependencies'
  - powershell: |
      cd ..
      mkdir new_tentacles
      xcopy Backtesting new_tentacles\\Backtesting /E/H/I
      xcopy Evaluator new_tentacles\\Evaluator /E/H/I
      xcopy Services new_tentacles\\Services /E/H/I
      xcopy Trading new_tentacles\\Trading /E/H/I
      cd OctoBot
    displayName: 'Install OctoBot with Tentacles'
  - script: |
      python start.py tentacles -d "../new_tentacles" -p "../new_tentacles.zip"
      python start.py tentacles --install --location "../new_tentacles.zip" --all
    displayName: 'Create OctoBot-Tentacles bundle'
  - script: python -m pytest tests
    displayName: 'Run OctoBot-Tentacles tests'

- job: macOS
  pool:
    vmImage: 'macOS-latest'
  strategy:
    maxParallel: 2
    matrix:
        Python36-64bit-full:
          PYTHON_VERSION: '3.7'
          PYTHON_ARCH: 'x64'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: $(PYTHON_VERSION)
      addToPath: true
      architecture: $(PYTHON_ARCH)
  - script: |
      git clone -q $OCTOBOT_GH_REPO -b ${BUILD_SOURCEBRANCHNAME} || git clone -q $OCTOBOT_GH_REPO -b $OCTOBOT_DEFAULT_BRANCH
      cd OctoBot
    displayName: 'Install dependencies'
  - script: |
      python -m pip install --prefer-binary -r requirements.txt -r dev_requirements.txt
    displayName: 'Install dependencies'
  - script: |
      cd ..
      mkdir new_tentacles
      cp -r Backtesting Evaluator Services Trading new_tentacles
      cd OctoBot
    displayName: 'Install OctoBot with Tentacles'
  - script: |
      python start.py tentacles -d "../new_tentacles" -p "../new_tentacles.zip"
      python start.py tentacles --install --location "../new_tentacles.zip" --all
    displayName: 'Create OctoBot-Tentacles bundle'
  - script: python -m pytest tentacles
    displayName: 'Run OctoBot-Tentacles tests'
